<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on natsumaru</title>
    <link>https://natsumaru.netlify.app/posts/</link>
    <description>Recent content in Posts on natsumaru</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 07 Nov 2021 18:00:00 +0900</lastBuildDate><atom:link href="https://natsumaru.netlify.app/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【Googleスプレッドシート】今日の日付の行を色づける</title>
      <link>https://natsumaru.netlify.app/posts/google-spreadsheet-color-todays-row/</link>
      <pubDate>Sun, 07 Nov 2021 18:00:00 +0900</pubDate>
      
      <guid>https://natsumaru.netlify.app/posts/google-spreadsheet-color-todays-row/</guid>
      <description>はじめに Googleスプレッドシートで、「今日の日付」の行だけ色づける設定方法をご紹介します。
日付は日々変動します。「今日やる内容はなんだっけな」と確認したいときはありませんか？
そんなときに、目で今日の日付を探すのではなく、自動的に「今日の日付はここだよ」と強調する装飾ができたら便利ですよね。
スケジュール管理やカレンダーなど、「今日の日付」を強調させたいときに今回の設定方法を使ってみてください。
結論 「条件付き書式設定」を利用し、以下のように設定すれば完了です。
 表示形式 &amp;gt; 条件付き書式書式を選ぶ 条件を追加 を選択 「範囲に適用」で「A1:C」と記入 書式ルールで「カスタム数式」を選択 「=$A1=TODAY()」と記入 お好みの書式設定スタイルを設定する  「完了」を押して、設定を保存しましょう。
これで終了です。
カスタム数式の説明 カスタム数式で記入した「=$A1=TODAY()」はどういう意味か？を説明します。
まず、「=$A1」についてです。
スプレッドシートで「$（ドルマーク）」は絶対参照を意味します。
セルの中の関数に「=$A$1」などと記入した経験があるかもしれません。
条件付き書式設定でも、この「絶対参照」が利用できます。
「=$A1」が意味するのは、以下の内容です。
 列 … 常にA列を参照（B列を参照することはない） 行 … 1行目から順番に参照（2行目を見て、条件に合わなければ3行目を見て…を繰り返す）  続いて、「=TODAY()」について。
「=TODAY()」は、今日の日付を出力する関数です。
まとめると、今回設定した「書式ルール」で設定している条件は以下の通りです。
『参照するA列のいずれかのセル（Aの1行目〜AのN行目）に記入されている文字列が、今日の日付と合致してること』
この条件に合致した場合に、「範囲に適用」で選択した範囲内の行を、「書式設定のスタイル」で設定した装飾に変更することができます。
まとめ 以上、カレンダーやタスク管理が捗る設定方法でした。
ちなみに、「=TODAY()」を使えば、今日だけではなく「翌日」「1週間後」のような表現も可能です。
その場合は、「+1（翌日）」や「+7（1週間後）」のように任意の数字を足します。
翌日の日付を指定したい場合は、「=$A1=TODAY()+1」と記入して設定できます。
ぜひお試しください。</description>
    </item>
    
    <item>
      <title>【Python】漢字から日本語の読みを取得する</title>
      <link>https://natsumaru.netlify.app/posts/python-kana/</link>
      <pubDate>Sun, 17 Oct 2021 18:00:00 +0900</pubDate>
      
      <guid>https://natsumaru.netlify.app/posts/python-kana/</guid>
      <description>はじめに 内容 対象者 結論
手順 インストール
サンプル
CSVからまとめてやる方法 サンプル</description>
    </item>
    
    <item>
      <title>色使いが上手になりたいので色について調査する</title>
      <link>https://natsumaru.netlify.app/posts/search-color/</link>
      <pubDate>Sun, 18 Jul 2021 15:40:00 +0900</pubDate>
      
      <guid>https://natsumaru.netlify.app/posts/search-color/</guid>
      <description>配色の理論 「色彩」の基本 軸となるのは以下3つ
 補色性  複数の色の調和。     コントラスト  見やすさ。   鮮やかさ  感情。     よく聞く「色相環」
= 色を円状に並べたもの。
「すべての色には &amp;ldquo;対&amp;rdquo; の色がある」
いつ使う？ → 「その色と反対の色」を見つけるのに役立つ。
 「よい配色」とは 「3色配色」 「色相環」を使う。
1つの基本となる色を選び、そこから三角形をつないでできた3つの色の組み合わせ。
「トライアド配色」と言う。 Triad
「4色配色」 補色（色相環の反対の色）× 2 みたい。 正方形になるようにつくる。
「二重補色」 補色を2つ使う。
バランスがむずかしいみたい。同じ彩度のものをそのまま使うというより、メイン以外の彩度を下げたりして調整する。
Double Split Complementary
「類似色」 色相環で隣り合う色。 隣り合う3〜4色を使用。
「補色」 反対にある色を使う。 たぶんメインを1つ、アクセントに1つ使うといいのかな。
「分割補色」 補色ではなく隣の色を使う。3つになる。
メイン1
メイン1の補色の隣の2種類
で完成。
Split Complementary
組み合わせはわかった。 バランスは？
https://www.lifehacker.jp/2018/04/learn-the-basics-of-color-theory-to-know-what-looks-good.html https://uxmilk.jp/49907 https://www.shutterstock.com/ja/blog/complete-guide-color-in-design</description>
    </item>
    
    <item>
      <title>Google Spreadsheet Query Where From Other Sheet</title>
      <link>https://natsumaru.netlify.app/posts/google-spreadsheet-query-where-from-other-sheet/</link>
      <pubDate>Mon, 24 May 2021 11:03:20 +0900</pubDate>
      
      <guid>https://natsumaru.netlify.app/posts/google-spreadsheet-query-where-from-other-sheet/</guid>
      <description>=QUERY(&#39;②【P,R,Q,T,U記入】PlaceIDと座標確認&#39;!1:1000,&amp;quot;select A, B, D, E, F, L, S, V, W where S &amp;lt;&amp;gt;&#39;&#39; and ( F = &#39;&amp;quot; &amp;amp; JOIN(&amp;quot;&#39; or F = &#39;&amp;quot;, QUERY(&#39;【参照】食べログ取得除くジャンルの指定&#39;!A2:B,&amp;quot;select A where B = true&amp;quot;)) &amp;amp; &amp;quot;&#39;)&amp;quot;) </description>
    </item>
    
    <item>
      <title>Google Spreadsheet - Query and Check Box</title>
      <link>https://natsumaru.netlify.app/posts/google-spreadsheet-conbine-cells/</link>
      <pubDate>Mon, 24 May 2021 10:57:04 +0900</pubDate>
      
      <guid>https://natsumaru.netlify.app/posts/google-spreadsheet-conbine-cells/</guid>
      <description>aaa
={&amp;quot;id&amp;quot;,&amp;quot;gm_place_id&amp;quot;;QUERY(&#39;②【P,R,Q,T,U記入】PlaceIDと座標確認 のコピー&#39;!A2:1000,&amp;quot;select A, Q where Q&amp;lt;&amp;gt;&#39;&#39;&amp;quot;)} =QUERY(&#39;②【P,R,Q,T,U記入】PlaceIDと座標確認&#39;!1:1000,&amp;quot;select A, B, D, E, F, L, S, V, W where S &amp;lt;&amp;gt;&#39;&#39; and ( F = &#39;&amp;quot; &amp;amp; JOIN(&amp;quot;&#39; or F = &#39;&amp;quot;, QUERY(&#39;【参照】食べログ取得除くジャンルの指定&#39;!A2:B,&amp;quot;select A where B = true&amp;quot;)) &amp;amp; &amp;quot;&#39;)&amp;quot;) QUERY関数を利用して、
タイトル： QUERY関数の抽出条件で別シートのチェックボックスを参照する</description>
    </item>
    
    <item>
      <title>First_post</title>
      <link>https://natsumaru.netlify.app/posts/first_post/</link>
      <pubDate>Sat, 22 May 2021 17:28:44 +0900</pubDate>
      
      <guid>https://natsumaru.netlify.app/posts/first_post/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://natsumaru.netlify.app/posts/slack-fileupload/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://natsumaru.netlify.app/posts/slack-fileupload/</guid>
      <description>SlackApp作る 権限を与える（結局どれが必要だったのかわからんかった。試しつつやってみるか） チャンネルにAppを追加する コードを書く！  &amp;ldquo;Content-Type&amp;rdquo;: &amp;ldquo;multipart/form-data&amp;rdquo; の参考にした↓ https://kigiri.github.io/fetch/
コードは基本これ↓ https://qiita.com/seratch/items/2158cb0abed5b8e12809</description>
    </item>
    
  </channel>
</rss>
